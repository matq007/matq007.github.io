[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Git notes\n\n\n\ngit\n\n\nnotes\n\n\n\n\nMartin Proks\n\n\nJul 18, 2024\n\n\n\n\n\n\n\n\n\n\n\nSlow autocomplete in fish-shell on macOS Big Sur\n\n\n\ndevops\n\n\n\n\nMartin Proks\n\n\nJan 4, 2021\n\n\n\n\n\n\n\n\n\n\n\nMiscellaneous\n\n\n\nMartin Proks\n\n\nNov 4, 2020\n\n\n\n\n\n\n\n\n\n\n\nDriver for tp-link AC1300 on Ubuntu 20.04\n\n\n\nMartin Proks\n\n\nMay 1, 2020\n\n\n\n\n\n\n\n\n\n\n\nInstalling RNA velocity on macOS\n\n\n\nMartin Proks\n\n\nOct 9, 2019\n\n\n\n\n\n\n\n\n\n\n\nInstalling monocle3\n\n\n\nMartin Proks\n\n\nSep 22, 2019\n\n\n\n\n\n\n\n\n\n\n\nConverting RP to NAS, sort off\n\n\n\nMartin Proks\n\n\nAug 17, 2017\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2020/miscellaneous.html",
    "href": "posts/2020/miscellaneous.html",
    "title": "Miscellaneous",
    "section": "",
    "text": "Install Zotero + Zotero Connector\nPlugins\n\nZotfile (moving and renaming, sync with Dropbox/MEGA/GDrive …)\nBetter BibTex\nZotero Storage Scanner\n\nsource"
  },
  {
    "objectID": "posts/2020/miscellaneous.html#reference-manager-zotero",
    "href": "posts/2020/miscellaneous.html#reference-manager-zotero",
    "title": "Miscellaneous",
    "section": "",
    "text": "Install Zotero + Zotero Connector\nPlugins\n\nZotfile (moving and renaming, sync with Dropbox/MEGA/GDrive …)\nBetter BibTex\nZotero Storage Scanner\n\nsource"
  },
  {
    "objectID": "posts/2020/converting-rp-to-nas-sort-off.html",
    "href": "posts/2020/converting-rp-to-nas-sort-off.html",
    "title": "Converting RP to NAS, sort off",
    "section": "",
    "text": "Approximately two years ago I’ve been playing around with an idea of purchasing a NAS (Network attached storage). As a student looking at the prices, I’ve decided to make my own budget one. How hard can it right? I saw some Youtube videos where people were building NAS using Raspberry Pi (RP). So I’ve started digging for some Pi machine. I ended up choosing between Banana Pi (BP) and RP 2. The advantage of BP was that it had SATA connector right on the board, which would give me better read/write throughput. Ok, let’s try it out."
  },
  {
    "objectID": "posts/2020/converting-rp-to-nas-sort-off.html#round-1",
    "href": "posts/2020/converting-rp-to-nas-sort-off.html#round-1",
    "title": "Converting RP to NAS, sort off",
    "section": "Round 1",
    "text": "Round 1\nI found a BP Pro on site alza.cz and later on found out that it was actually a BP M1+. Never mind, the hardware configuration was the same. I’ve downloaded and installed Raspbian OS. The installation is pretty straight forward and can be found on the page or youtube. Ok, the installation was successful. Now let’s try to connect my external drive. For storage, I’ve used a 2.5” disk from my old notebook. Normally, if you want to connect a drive like this, you have to have an external adapter to power it up. With BP you don’t need any power adapter, the power is provided by the board when you connect the drive (Cha ching!). After connecting the disk, it’s time to mount it. Unfortunately, no new device was detected. I guess I really need an external power adapter. Tried the adapter, still nothing. Ok, now this is getting frustrating. Maybe the disk is not working properly, let’s connect it to my work station. The disk was detected immediately. I’ve spent the whole day trying to connect the drive to the BP, but with no luck. No worries, I can still buy RP 2 and try that instead. I’ve returned the BP and ordered RP 2. After one week it arrived and I could continue with my experiment."
  },
  {
    "objectID": "posts/2020/converting-rp-to-nas-sort-off.html#round-2",
    "href": "posts/2020/converting-rp-to-nas-sort-off.html#round-2",
    "title": "Converting RP to NAS, sort off",
    "section": "Round 2",
    "text": "Round 2\nThe process was the same as before. Connect all the cables to RP and install the latest Rasbian OS. However this time, there was no SATA connector. That’s why I ordered a case for 2.5” hard drive with USB 3.0. Yes, I know RP 2 has only USB 2.0 but I can reuse this case later in future for something else. But wait, you said that external drives have to have an external power supply. How are you going to power the drive if it’s already in a case? The cool part about RP is that you can play with the configuration. In order to connect an external drive, you have to modify config.txt file and add this line max_usb=1. With this setting, RP will use more voltage for USB, thus making it possible connecting an external drive. Ready for a test run? Yes, it worked! Mission successful! Configuration Finally, we can move on to the next step. Installing Samba for sharing and ufw for creating firewall rules. Let’s not forget to also setup SSH (I would like to disconnect the keyboard and monitor that are now connected to the RP).\n# Update your /etc/fstab to mount the drive on boot\n# Installation and update\nsudo apt-get update -y && sudo apt-get upgrade\nsudo apt-get install samba ufw\n# Setting up Samba\n# Create user on raspberry:\nsudo useradd &lt;USERNAME&gt; - shell /bin/false\n# Set permissions:\nsudo chown &lt;USERNAME&gt; &lt;PATH_TO_DRIVE&gt;\n# Create password for samba:\nsudo smbpasswd -a &lt;USERNAME&gt;\n# Update configuration\nvi /etc/samba/smb.conf\n[SHARE]\npath = /mnt/share/\nvalid users = &lt;USERNAME&gt;\nread only = No\ncreate mask = 0777\ndirectory mask = 0777\n# Save and exit vim (!x or !wq)\n# Verify the correctness of configuration\ntestparm\n# Start samba\nsudo systemctl start samba\n# Check that status, you should see green Active\nsudo systemctl status samba\n# Auto start samba\nsudo systemctl enable samba\n# Setting up firewall rules\n# I didn't have Samba listed in apps so I created my own \nvi /etc/ufw/applications.d/ufw-fileserver\n[samba]\ntitle=Samba\ndescription=Samba\nports=137,138,139,445/tcp\n# After saving it's time to setup some firewall rules\n# 1. I want to access ssh but I wan't to limit it\n# 2. I want to access Samba only on my local network\nsudo ufw limit ssh\nsudo ufw allow from XXX.XXX.X.0/16 to any app Samba\nsudo ufw enable\n# Check the status that it works\nsudo ufw status\nBackup the most important data on USB stick I know, I know, this is insane and bold. You should definitely not do this at home! I didn’t have another drive available, so I found some 4GB USB stick, which I used as my secondary drive, where I’ve backed up only the most important documents that my parents use.\n# Update /etc/fstab to mount the USB stick\n# Create a backup script\nvi ~/backup\n#!/bin/bash\nrsync -av --delete &lt;DRIVE_PATH&gt;/Important/ &lt;BACKUP_PATH&gt;/Important\n# Make the file executable and run it as a cron job \n# every day at 1.00am\nchmod +x backup\ncrontab -e\n0 1 * * * ~/backup\nI’ve setup one more backup on my desktop station. I am using Free FileSync application for backing up data. I’m using a real-time backup with mirroring option. I’ve setup one more rule to check my share folder and copy again only the most important files to the backup drive to my desktop station. This way if everything fails, I should still have some backup. How about some small scripts? I’ve played around with the first setup and created some small scripts like a welcome page, sending notifications to slack on login, etc. You can find some of them here and here."
  },
  {
    "objectID": "posts/2020/converting-rp-to-nas-sort-off.html#conclusion-summary",
    "href": "posts/2020/converting-rp-to-nas-sort-off.html#conclusion-summary",
    "title": "Converting RP to NAS, sort off",
    "section": "Conclusion & Summary",
    "text": "Conclusion & Summary\nThe project started with an idea of using SATA connector for connecting the drive and sharing it locally. That quite didn’t happen, so I ended up switching to USB 2.0 on RP which has lower read/write speeds. Nevertheless, the end result was fine and the system actually worked. Now hold on a minute, why would you go through so much trouble when you could have just connected the drive to your router and share it? I could have done it right after I discovered problems with the BP. But I was curious how it would work with RP. Of course, this is not really a NAS (well sort off is), but the fun and learning outcome was worth it. To be honest, I’ve been running this setup at home for over a year without any problem what so ever. This was a very interesting project with many ups and downs. I don’t encourage you to build the same setup. I’ve just wanted to demonstrate what can be done by reusing an old hard drive and some free time. If you have any questions or found some errors, let me know in the comments below."
  },
  {
    "objectID": "posts/2020/converting-rp-to-nas-sort-off.html#sources",
    "href": "posts/2020/converting-rp-to-nas-sort-off.html#sources",
    "title": "Converting RP to NAS, sort off",
    "section": "Sources",
    "text": "Sources\n\nSSH\nsamba\nufw"
  },
  {
    "objectID": "posts/2021/fix-big-sir-fish-shell.html",
    "href": "posts/2021/fix-big-sir-fish-shell.html",
    "title": "Slow autocomplete in fish-shell on macOS Big Sur",
    "section": "",
    "text": "UPDATE: Upgrading to fish &gt;3 solves the issues now.\nIf you have decided to upgrade to the latest macOS Big Sur 10.14.6, you might have experienced an issue with slow autocomplete in fish-shell.\nDue to change to read-only permissions for whatis 1 the man pages can’t be updated for /usr/share/man. Therefore, the fish is switching to using apropos 2."
  },
  {
    "objectID": "posts/2021/fix-big-sir-fish-shell.html#how-to-fix-without-updating",
    "href": "posts/2021/fix-big-sir-fish-shell.html#how-to-fix-without-updating",
    "title": "Slow autocomplete in fish-shell on macOS Big Sur",
    "section": "How to fix without updating?",
    "text": "How to fix without updating?\n# create backup\ncp /usr/local/share/fish/functions/__fish_describe_command.fish \\\n   /usr/local/share/fish/functions/__fish_describe_command.fish.old\n\n# Taken from: https://github.com/fish-shell/fish-shell/issues/6270#issuecomment-548515306\necho \"function __fish_describe_command; end\" &gt; /usr/local/share/fish/functions/__fish_describe_command.fish\nThank you fish community for such a quick solution 3."
  },
  {
    "objectID": "posts/2021/fix-big-sir-fish-shell.html#footnotes",
    "href": "posts/2021/fix-big-sir-fish-shell.html#footnotes",
    "title": "Slow autocomplete in fish-shell on macOS Big Sur",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://github.com/fish-shell/fish-shell/issues/6270↩︎\nhttps://apple.stackexchange.com/questions/374025/errors-from-whatis-command-unable-to-rebuild-database-with-makewhatis↩︎\nhttps://github.com/fish-shell/fish-shell/pull/7365↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Martin PROKS",
    "section": "",
    "text": "I am interested in developmental biology and precision medicine. I like to build and contribute to tools in the field of bioinformatics."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "This is a short list of projects I’ve been working on over the past few years."
  },
  {
    "objectID": "projects.html#phd",
    "href": "projects.html#phd",
    "title": "Projects",
    "section": "PhD",
    "text": "PhD\n\nThesis: From high dimensionality to developmental biology - understanding the evolution of cell identity in the early embryo\n\nccmnet: Detection of causal interactions from scRNA-seq datasets\nPreimplantation DL models: DL models for predicting cell types in early mouse and human development (web portal, datasets, models)\nnf-core/marsseq: Preprocessing pipeline for single-cell MARS-seq experiments\ncat-python: Estimates similarity between clusters from different single-cell sequencing techniques\n\nSmall tools and utilities are available at github.com/brickmanlab\n\nbrickmanlab/scanvi-explainer: SCANVI explainer\nbrickmanlab/primeseq: PRIME-seq preprocessing nf-core pipeline"
  },
  {
    "objectID": "projects.html#masters",
    "href": "projects.html#masters",
    "title": "Projects",
    "section": "Master’s",
    "text": "Master’s\n\nThesis: Genomic Profiling of a Comprehensive Nation-wide Collection of Childhood Solid Tumors\n\nnf-core/rnafusion: Preprocessing pipeline for identification of fusion genes from RNA-seq\nfusion-report: Tool for parsing outputs from fusion detection tools. Part of a nf-core/rnafusion pipeline\n\nDM855-classification: Testing various supervised techniques (doesn’t work correctly on a chosen dataset)\nDM843-project: Testing different clustering methods on protein similarity matrix generated by BLAST\nDM847: Detecting candy flavour from breath analyzer using Random Forest Classification"
  },
  {
    "objectID": "projects.html#bachelors",
    "href": "projects.html#bachelors",
    "title": "Projects",
    "section": "Bachelor’s",
    "text": "Bachelor’s\n\nurbis: Municipality survey iOS app hackathon\nsign-academy: Learn alphabet sign language hackathon\nbaa-ios-exam: Movie iOS application written in Swift\nbaa-timetable: CLI for Timetable at BAA\nlivecoding-phonebook: Phone book written in c++\njava-cv-generator: Web Java application for generating CV using LateX"
  },
  {
    "objectID": "projects.html#contributions",
    "href": "projects.html#contributions",
    "title": "Projects",
    "section": "Contributions",
    "text": "Contributions\n\nnf-core\nbioconda-recipes"
  },
  {
    "objectID": "posts/2024/git.html",
    "href": "posts/2024/git.html",
    "title": "Git notes",
    "section": "",
    "text": "If you have ever written any code or small software, chances are you have used some form of version control such as Git or Mercurial. Below I summarize random article, snippets or tools I find usefull when working with Git."
  },
  {
    "objectID": "posts/2024/git.html#articles",
    "href": "posts/2024/git.html#articles",
    "title": "Git notes",
    "section": "Articles",
    "text": "Articles\n\nInteresting piece describing the the beginnings of git recommended\nConventional commits must-read\nNice 89 tricks recommended"
  },
  {
    "objectID": "posts/2024/git.html#snippets",
    "href": "posts/2024/git.html#snippets",
    "title": "Git notes",
    "section": "Snippets",
    "text": "Snippets\n\nAvoid merging with rebase\nTypical scenario, you are working on some code, you decide you are ready to commit push your changes to common branch (main, master, dev) and surprise. Someone else already pushed new changes to the branch and you don’t have the latest working state.\nIn case you and the other developer worked on different parts of the code, instead of standard git pull, try git pull --rebase. By doing so, you will avoid creating an extra merge commit, which can make the git tree cleaner. For visual example, see this Youtube video."
  },
  {
    "objectID": "posts/2024/git.html#tools",
    "href": "posts/2024/git.html#tools",
    "title": "Git notes",
    "section": "Tools",
    "text": "Tools\n\ngit-cliff: Customizable changelog generator"
  },
  {
    "objectID": "posts/2020/installing-monocle.html",
    "href": "posts/2020/installing-monocle.html",
    "title": "Installing monocle3",
    "section": "",
    "text": "In this short post I will demonstrate how to install package monocle3 in R on your macOS. If you are using default compilers provided by Apple, you might have encounter some errors like\nor"
  },
  {
    "objectID": "posts/2020/installing-monocle.html#solution",
    "href": "posts/2020/installing-monocle.html#solution",
    "title": "Installing monocle3",
    "section": "Solution",
    "text": "Solution\nTo solve this issue you first have to update your current gcc compiler as well as installing llvm. The problem is that macOS does not come with gFortran package which is required by sub-package leidenbase. In this case I recommend installing/upgrading the packages using brew illustrated below.\nbrew install gcc llvm\n# copy and paste the code in your shell to enable llvm\nSecondly, now we have to tell R to use these packages by updating ~/.R/Makevars path. If you do not have .R folder in your home directory, you can create it by running mkdir ~\\.R.\nBefore changing the variables you have to verify which gcc version have you installed. You can do so by running gcc-&lt;TAB&gt;. The example below shows how to setup the variables for gcc-9.\nvim ~/.R/Makevars\n# Copy and paste the code below.\nVER=-9\nCC=gcc$(VER)\nCXX=g++$(VER)\nCFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion\nCXXFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion\nFLIBS=-L/usr/local/Cellar/gcc/9.2.0/lib/gcc/9/\n\n# Restart R\nGood job, now restart R and run the monocle3 installation again.\nBiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',\n                       'limma', 'S4Vectors', 'SingleCellExperiment',\n                       'SummarizedExperiment'))\ndevtools::install_github('cole-trapnell-lab/leidenbase')\ndevtools::install_github('cole-trapnell-lab/monocle3')"
  },
  {
    "objectID": "posts/2020/installing-monocle.html#resources",
    "href": "posts/2020/installing-monocle.html#resources",
    "title": "Installing monocle3",
    "section": "Resources",
    "text": "Resources\n\nStackoverflow\nMonocle3 documentation"
  },
  {
    "objectID": "posts/2020/installing-tp-link-ubuntu.html",
    "href": "posts/2020/installing-tp-link-ubuntu.html",
    "title": "Driver for tp-link AC1300 on Ubuntu 20.04",
    "section": "",
    "text": "Credit goes to madscintist."
  },
  {
    "objectID": "posts/2020/installing-tp-link-ubuntu.html#reference",
    "href": "posts/2020/installing-tp-link-ubuntu.html#reference",
    "title": "Driver for tp-link AC1300 on Ubuntu 20.04",
    "section": "Reference",
    "text": "Reference\n\nForum thread\nGitHub: EntropicEffect/rtl8822bu"
  },
  {
    "objectID": "posts/2020/installing-rna-velocity.html",
    "href": "posts/2020/installing-rna-velocity.html",
    "title": "Installing RNA velocity on macOS",
    "section": "",
    "text": "Package repo: https://github.com/velocyto-team/velocyto.R\nAt first install necessary library dependencies.\nbrew install gcc libomp boost\nUpdate your ~/.R/Makevars. It should look similar to the one below.\nVER=-9\nCC=gcc$(VER)\nCXX=g++$(VER)\nCFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion\nCXXFLAGS=-mtune=native -g -O2 -Wall -pedantic -Wconversion\nFLIBS=-L/usr/local/Cellar/gcc/9.2.0/lib/gcc/9/\n\n# This is for open mp\nSHLIB_OPENMP_CFLAGS=-Xpreprocessor -fopenmp\nSHLIB_OPENMP_CXXFLAGS=-Xpreprocessor -fopenmp\nAdditional required R packages.\nBiocManager::install(c(\"pcaMethods\", \"igraph\", \"h5\"))\ninstall.packages(\"devtools\")\ndevtools::install_github(\"velocyto-team/velocyto.R\")"
  }
]